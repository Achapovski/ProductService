services:
  fastapi:
    container_name: ProductService
    hostname: fastapi
    build:
      context: .
      dockerfile: Dockerfile
    command: bash -c "alembic upgrade head && uvicorn src.main:app --host 0.0.0.0 --port 8082"
    ports:
      - "8001:8082"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
      kafka:
        condition: service_healthy
    restart: always

  postgres:
    container_name: PostgreSQL
    hostname: postgres
    image: postgres:16
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_DATABASE}
    env_file:
      - .env

  redis:
    container_name: Redis
    hostname: redis
    image: redis
    volumes:
      - ./redis_data:/data

  kafka:
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    container_name: Kafka
    hostname: kafka
    image: apache/kafka
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD-SHELL", "/opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9092 --list || exit 1"]
      interval: 5s
      timeout: 30s
      retries: 10

volumes:
  redis_data:

